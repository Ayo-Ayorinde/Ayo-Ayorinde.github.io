[
  {
    "objectID": "posts/Statistical_Analysis_of_COVID-19_dataset/index.html",
    "href": "posts/Statistical_Analysis_of_COVID-19_dataset/index.html",
    "title": "Analysis of COVID-19 Dataset",
    "section": "",
    "text": "In this project, I explored a COVID-19 dataset using R to validate (or challenge) some of the claims and narratives that circulated during the pandemic.\nThe analysis covered:\n• Data cleaning and pre-processing\n• Data visualization\n• Statistical techniques and hypothesis testing\nYou can find the data for the project here\n\nImporting the dependencies\n\n\nCode\nif(!require(pacman)) install.packages(\"pacman\")  # Installing the package manager\n\npacman::p_load(tidyverse, # Metapackage\n               here, # R library for coercing Rmarkdown into reading dataset from a seperate folder\n               visdat, # R library for graphical inspection of dataset\n               inspectdf, # R library for the distribution of variables \n               gtsummary,\n               ggplot2\n               )\n\n\n\n\nLoading the COVID-19 dataset into R\n\n\nCode\ncovid &lt;- read_csv(here(\"posts/Statistical_Analysis_of_COVID-19_dataset/data/COVID19_line_list_data.csv\"))\n\n\n\n\nExploring and inspecting the dataset\n\n\nCode\n# Exploring the dataset\n\ndim(covid)\n\n\n[1] 1085   27\n\n\nCode\nhead(covid, n = 10)\n\n\n# A tibble: 10 × 27\n      id case_in_country `reporting date` ...4  summary  location country gender\n   &lt;dbl&gt;           &lt;dbl&gt; &lt;chr&gt;            &lt;lgl&gt; &lt;chr&gt;    &lt;chr&gt;    &lt;chr&gt;   &lt;chr&gt; \n 1     1              NA 1/20/2020        NA    First c… Shenzhe… China   male  \n 2     2              NA 1/20/2020        NA    First c… Shanghai China   female\n 3     3              NA 1/21/2020        NA    First c… Zhejiang China   male  \n 4     4              NA 1/21/2020        NA    new con… Tianjin  China   female\n 5     5              NA 1/21/2020        NA    new con… Tianjin  China   male  \n 6     6              NA 1/21/2020        NA    First c… Chongqi… China   female\n 7     7              NA 1/21/2020        NA    First c… Sichuan  China   male  \n 8     8              NA 1/21/2020        NA    new con… Beijing  China   male  \n 9     9              NA 1/21/2020        NA    new con… Beijing  China   male  \n10    10              NA 1/21/2020        NA    new con… Beijing  China   male  \n# ℹ 19 more variables: age &lt;dbl&gt;, symptom_onset &lt;chr&gt;,\n#   If_onset_approximated &lt;dbl&gt;, hosp_visit_date &lt;chr&gt;, exposure_start &lt;chr&gt;,\n#   exposure_end &lt;chr&gt;, `visiting Wuhan` &lt;dbl&gt;, `from Wuhan` &lt;dbl&gt;,\n#   death &lt;chr&gt;, recovered &lt;chr&gt;, symptom &lt;chr&gt;, source &lt;chr&gt;, link &lt;chr&gt;,\n#   ...22 &lt;lgl&gt;, ...23 &lt;lgl&gt;, ...24 &lt;lgl&gt;, ...25 &lt;lgl&gt;, ...26 &lt;lgl&gt;,\n#   ...27 &lt;lgl&gt;\n\n\nCode\ntail(covid, n = 10)\n\n\n# A tibble: 10 × 27\n      id case_in_country `reporting date` ...4  summary  location country gender\n   &lt;dbl&gt;           &lt;dbl&gt; &lt;chr&gt;            &lt;lgl&gt; &lt;chr&gt;    &lt;chr&gt;    &lt;chr&gt;   &lt;chr&gt; \n 1  1076              14 2/25/2020        NA    new COV… Bahrain  Bahrain male  \n 2  1077              15 2/25/2020        NA    new COV… Bahrain  Bahrain male  \n 3  1078              16 2/25/2020        NA    new COV… Bahrain  Bahrain female\n 4  1079              17 2/25/2020        NA    new COV… Bahrain  Bahrain female\n 5  1080               1 2/25/2020        NA    new COV… Innsbru… Austria &lt;NA&gt;  \n 6  1081               2 2/25/2020        NA    new COV… Innsbru… Austria &lt;NA&gt;  \n 7  1082               1 2/24/2020        NA    new COV… Afghani… Afghan… &lt;NA&gt;  \n 8  1083               1 2/26/2020        NA    new COV… Algeria  Algeria male  \n 9  1084               1 2/25/2020        NA    new COV… Croatia  Croatia male  \n10  1085               1 2/25/2020        NA    new COV… Bern     Switze… male  \n# ℹ 19 more variables: age &lt;dbl&gt;, symptom_onset &lt;chr&gt;,\n#   If_onset_approximated &lt;dbl&gt;, hosp_visit_date &lt;chr&gt;, exposure_start &lt;chr&gt;,\n#   exposure_end &lt;chr&gt;, `visiting Wuhan` &lt;dbl&gt;, `from Wuhan` &lt;dbl&gt;,\n#   death &lt;chr&gt;, recovered &lt;chr&gt;, symptom &lt;chr&gt;, source &lt;chr&gt;, link &lt;chr&gt;,\n#   ...22 &lt;lgl&gt;, ...23 &lt;lgl&gt;, ...24 &lt;lgl&gt;, ...25 &lt;lgl&gt;, ...26 &lt;lgl&gt;,\n#   ...27 &lt;lgl&gt;\n\n\nCode\n# Inspecting the dataset\n\nvis_dat(covid)\n\n\n\n\n\n\n\n\n\nCode\ninspect_cat(covid) %&gt;% \n  show_plot()\n\n\n\n\n\n\n\n\n\nCode\ninspect_num(covid) %&gt;% \n  show_plot()\n\n\n\n\n\n\n\n\n\n\n\nSelecting, cleaning, transformation and manipulation of the variables of interest\n\n\nCode\ncovid_selected &lt;- covid %&gt;% \n  select(id,\n         reporting_date = 'reporting date', # The initial variable name has to go into quote because it has a whitespace which is unconventional for variable name in R\n         gender, \n         death,\n         age,\n         country)\n\n\n\n\nCode\ncovid_selected %&gt;% \n  select(death) %&gt;% \n  unique()\n\n\n# A tibble: 14 × 1\n   death    \n   &lt;chr&gt;    \n 1 0        \n 2 1        \n 3 2/14/2020\n 4 2/26/2020\n 5 2/13/2020\n 6 2/28/2020\n 7 2/27/2020\n 8 2/25/2020\n 9 2/23/2020\n10 2/24/2020\n11 2/22/2020\n12 02/01/20 \n13 2/19/2020\n14 2/21/2020\n\n\nCode\ncovid_selected &lt;- covid_selected %&gt;% \n  mutate(death = as.integer(covid$death != 0)) # This overwrite the initial death column by leaving entries as 0 or converting not zero entries to 1\n\ncovid_selected %&gt;% # checking to confirm if the changes has been effected\n  select(death) %&gt;% \n  unique()\n\n\n# A tibble: 2 × 1\n  death\n  &lt;int&gt;\n1     0\n2     1\n\n\n\n\nCode\ncovid_selected &lt;- covid_selected %&gt;% \n  mutate(reporting_date = mdy(reporting_date)) # This overwrite the initial reporting date by converting the variable class to Date\n\n\n\n\nCode\ncovid_selected &lt;- covid_selected %&gt;% \n  mutate(month = month(reporting_date, label = T),\n         month = replace_na(month,\"Feb\")) # The first mutate chunk create a new column for month and the second replaces na in the month variable with Feb\n\n\n\n\nCode\ncovid_selected &lt;- covid_selected %&gt;% # Creating a column for continent\n  mutate(continent = case_when(\n    country %in% c(\"USA\", \"Canada\") ~ \"North America\",\n    country %in% c(\"France\", \"Germany\", \"Italy\", \"Russia\", \"UK\", \"Finland\", \"Spain\",\n                   \"Sweden\", \"Belgium\", \"Austria\", \"Croatia\", \"Switzerland\") ~ \"Europe\",\n    country %in% c(\"China\", \"Japan\", \"Malaysia\", \"Nepal\", \"Singapore\", \"South Korea\",\n                   \"Taiwan\", \"Thailand\", \"Vietnam\", \"Cambodia\", \"Sri Lanka\", \"UAE\", \n                   \"Hong Kong\", \"India\", \"Phillipines\", \"Iran\", \"Israel\", \"Lebanon\",\n                   \"Kuwait\", \"Bahrain\", \"Afghanistan\") ~ \"Asia\",\n    country %in% c(\"Australia\") ~ \"Oceania\",\n    country %in% c(\"Egypt\", \"Algeria\") ~ \"Africa\",\n    TRUE ~ \"Other\"))\n\n\n\n\nVisualizing some of the variables of interest\n\n\nCode\nggplot(covid_selected, mapping = aes(x = month)) +\n  geom_bar() +\n  labs(title = \"Distribution of Cases Reported by Month\",\n       subtitle = \"Jan 2020 - Feb, 2020\",\n       x = \"Month\",\n       caption = \"Analyst: Ayorinde Ayomide David\")\n\n\n\n\n\n\n\n\n\n\n\nCode\nggplot(covid_selected,mapping = aes(x = continent, fill = continent)) +\n   geom_bar() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1)) +\n  labs(title = \"Distribution of COVID-19 Cases by Country\",\n       subtitle = \"Jan 2020 - Feb 2020\",\n       x = \"Country\",\n       caption = \"Analyst: Ayorinde Ayomide David\",\n       fill = \"Country\")\n\n\n\n\n\n\n\n\n\n\n\nAnalyzing fatality by country\n\n\nCode\ncovid_selected %&gt;% \n  group_by(country) %&gt;%  \n  summarise(number_of_death = sum(death == 1))\n\n\n# A tibble: 38 × 2\n   country     number_of_death\n   &lt;chr&gt;                 &lt;int&gt;\n 1 Afghanistan               0\n 2 Algeria                   0\n 3 Australia                 0\n 4 Austria                   0\n 5 Bahrain                   0\n 6 Belgium                   0\n 7 Cambodia                  0\n 8 Canada                    0\n 9 China                    39\n10 Croatia                   0\n# ℹ 28 more rows\n\n\n\n\nStatistical Analysis\nTwo-sample t-test\nH0: There is no significant difference between the age of those alive and dead (\\(\\mu_1 = \\mu_2\\))\nH1: There is a significant difference between the age of those alive and dead (\\(\\mu_1 \\ne \\mu_2\\))\n\n\nCode\ncovid_selected %&gt;% \n  group_by(death) %&gt;% \n  summarise(gender_death_mean = mean(age, na.rm = T))\n\n\n# A tibble: 2 × 2\n  death gender_death_mean\n  &lt;int&gt;             &lt;dbl&gt;\n1     0              48.1\n2     1              68.6\n\n\nWe can see that there is a difference of about 20(in years) between the ages of those that are dead and alive. Now, the question:\nIs this really significant?\nLet’s confirm using t.test\n\n\nCode\ndead &lt;- covid_selected %&gt;% \n  filter(death == 1)\nalive &lt;- covid_selected %&gt;% \n  filter(death == 0)\n\nt.test(alive$age,\n       dead$age,\n       conf.level = 0.95,\n       alternative = \"two.sided\")\n\n\n\n    Welch Two Sample t-test\n\ndata:  alive$age and dead$age\nt = -10.839, df = 72.234, p-value &lt; 2.2e-16\nalternative hypothesis: true difference in means is not equal to 0\n95 percent confidence interval:\n -24.28669 -16.74114\nsample estimates:\nmean of x mean of y \n 48.07229  68.58621 \n\n\nDecision rule: If p-value is &lt; 0.05, we reject null hypothesis, otherwise, we fail to reject null hypothesis\nConclusion: Since the p-value is &lt; 0.05, we reject null hypothesis and conclude that there is a significant difference between the age of those that are dead and those that are alive. In order words, older people are more likely/prone to death if tested positive for COVID-19\nTest of Independence\n\n\nCode\ncovid_selected &lt;- covid_selected %&gt;% \n  drop_na(gender) %&gt;% \n  mutate(gender_cov = factor(gender),\n         death_cov = factor(case_when(death == 1 ~ \"Dead\",\n                               death == 0 ~ \"Alive\")))\n\nggplot(covid_selected, mapping = aes(x = gender_cov,\n                            fill = death_cov)) +\n  geom_bar() +\n  labs(title = \"Chi-Square Test of Independence Bar Chart\",\n       subtitle = \"Gender and Death\",\n       x = \"Gender\",\n       caption = \"Analyst: Ayorinde Ayomide David\",\n       fill = \"Life status\")\n\n\n\n\n\n\n\n\n\nAre the proportions of gender independent of life status?\nThe question above leads us to the hypothesis below\nH0: The variables are independent i.e There is no relationship between the variables\nH1: The variables are not independent i.e There is a relationship between the variables\n\n\nCode\ncovid_selected %&gt;% \n  select(gender_cov,\n         death_cov) %&gt;% \n  table() %&gt;% \n  chisq.test()\n\n\n\n    Pearson's Chi-squared test with Yates' continuity correction\n\ndata:  .\nX-squared = 7.6428, df = 1, p-value = 0.0057\n\n\nDecision rule: If p-value is &lt; 0.05, we reject null hypothesis, otherwise, we fail to reject null hypothesis\nConclusion: Since the p-value is &lt; 0.05, we reject null hypothesis and conclude that there is a relationship between the death and gender variable"
  },
  {
    "objectID": "portfolio.html",
    "href": "portfolio.html",
    "title": "Portfolio",
    "section": "",
    "text": "Analysis of NFL Dataset\n\n\n\ncode\n\n\nanalysis\n\n\nr\n\n\n\n\n\n\n\nAyorinde Ayomide David\n\n\nJul 28, 2025\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nAnalysis of COVID-19 Dataset\n\n\n\ncode\n\n\nanalysis\n\n\nr\n\n\n\n\n\n\n\nAyorinde Ayomide David\n\n\nJul 27, 2025\n\n\n\n\n\n\n\n\nNo matching items"
  },
  {
    "objectID": "cv.html",
    "href": "cv.html",
    "title": "Ayorinde Ayomide David",
    "section": "",
    "text": "{width=100%, height=1000px"
  },
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Ayorinde Ayomide David",
    "section": "",
    "text": "Ayorinde Ayomide David is a data specialist with a B.Sc. in Statistics from the Federal University of Agriculture, Abeokuta. With a strong foundation in statistical methods and a passion for data-driven solutions, he specializes in transforming raw data into actionable insights to support research, business, and policy decisions.\nHe currently works with KaySky Nigeria Limited as a Journey and Tracking Manager, where he plays a key role in monitoring fleet performance, enhancing delivery efficiency, and ensuring compliance with safety and operational standards."
  },
  {
    "objectID": "posts/Analysis of National Football League(NFL) dataset/index.html",
    "href": "posts/Analysis of National Football League(NFL) dataset/index.html",
    "title": "Analysis of NFL Dataset",
    "section": "",
    "text": "This project explores the data from the 2023/24 NFL season to provide valuable insight about the happenings of the season\n\nLoading dependencies\n\n\nCode\nif(!require(pacman)) install.packages(\"pacman\") # installing the package manager\n\npacman::p_load(tidyverse, #R meta-package\n               nflreadr, # R library for NFL data\n               gt, # R library for interactive tables\n               ggimage, # R library  \n               gtExtras,\n               future,\n               visdat,\n               inspectdf, # R library for visual EDA\n               gtsummary) # R library for descriptive EDA\n\n\n\n\nTelling R to run future tasks in parallel i.e each on its own background session in R(seperate R process)\n\n\nCode\nplan(\"multisession\")\noptions(timeout = 300) # Timeout of 60secs was reached without the dataset being loaded. Hence, the need to manually increase the timeout limit to  5 mins\n\n\n\n\nLoading NFL data for 2023/24 season\n\n\nCode\npbp &lt;- load_pbp(2023)\nplan(\"sequential\")\n\n\n\n\nExploring, selecting and inspecting the variables of interest\n\n\nCode\n#Exploring the whole dataset\n\ndim(pbp)\n\n\n[1] 49665   372\n\n\nCode\nhead(pbp)\n\n\n# A tibble: 6 × 372\n  play_id game_id      old_game_id home_team away_team season_type  week posteam\n    &lt;dbl&gt; &lt;chr&gt;        &lt;chr&gt;       &lt;chr&gt;     &lt;chr&gt;     &lt;chr&gt;       &lt;int&gt; &lt;chr&gt;  \n1       1 2023_01_ARI… 2023091007  WAS       ARI       REG             1 &lt;NA&gt;   \n2      39 2023_01_ARI… 2023091007  WAS       ARI       REG             1 WAS    \n3      55 2023_01_ARI… 2023091007  WAS       ARI       REG             1 WAS    \n4      77 2023_01_ARI… 2023091007  WAS       ARI       REG             1 WAS    \n5     102 2023_01_ARI… 2023091007  WAS       ARI       REG             1 WAS    \n6     124 2023_01_ARI… 2023091007  WAS       ARI       REG             1 WAS    \n# ℹ 364 more variables: posteam_type &lt;chr&gt;, defteam &lt;chr&gt;, side_of_field &lt;chr&gt;,\n#   yardline_100 &lt;dbl&gt;, game_date &lt;chr&gt;, quarter_seconds_remaining &lt;dbl&gt;,\n#   half_seconds_remaining &lt;dbl&gt;, game_seconds_remaining &lt;dbl&gt;,\n#   game_half &lt;chr&gt;, quarter_end &lt;dbl&gt;, drive &lt;dbl&gt;, sp &lt;dbl&gt;, qtr &lt;dbl&gt;,\n#   down &lt;dbl&gt;, goal_to_go &lt;int&gt;, time &lt;chr&gt;, yrdln &lt;chr&gt;, ydstogo &lt;dbl&gt;,\n#   ydsnet &lt;dbl&gt;, desc &lt;chr&gt;, play_type &lt;chr&gt;, yards_gained &lt;dbl&gt;,\n#   shotgun &lt;dbl&gt;, no_huddle &lt;dbl&gt;, qb_dropback &lt;dbl&gt;, qb_kneel &lt;dbl&gt;, …\n\n\nCode\n# Selecting the variable of interest\n\npbp_selected &lt;- pbp %&gt;% \n  select(game_id, week, home_team, away_team,season_type,game_date,result,home_score,away_score)\n\n#Inspecting the selected variables for missing values\n\npbp_selected %&gt;% \n  filter(is.na(week)) \n\n\n# A tibble: 0 × 9\n# ℹ 9 variables: game_id &lt;chr&gt;, week &lt;int&gt;, home_team &lt;chr&gt;, away_team &lt;chr&gt;,\n#   season_type &lt;chr&gt;, game_date &lt;chr&gt;, result &lt;int&gt;, home_score &lt;int&gt;,\n#   away_score &lt;int&gt;\n\n\nCode\npbp_selected %&gt;% \n  filter(is.na(home_team))\n\n\n# A tibble: 0 × 9\n# ℹ 9 variables: game_id &lt;chr&gt;, week &lt;int&gt;, home_team &lt;chr&gt;, away_team &lt;chr&gt;,\n#   season_type &lt;chr&gt;, game_date &lt;chr&gt;, result &lt;int&gt;, home_score &lt;int&gt;,\n#   away_score &lt;int&gt;\n\n\nCode\npbp_selected %&gt;% \n  filter(is.na(away_team))\n\n\n# A tibble: 0 × 9\n# ℹ 9 variables: game_id &lt;chr&gt;, week &lt;int&gt;, home_team &lt;chr&gt;, away_team &lt;chr&gt;,\n#   season_type &lt;chr&gt;, game_date &lt;chr&gt;, result &lt;int&gt;, home_score &lt;int&gt;,\n#   away_score &lt;int&gt;\n\n\nCode\npbp_selected %&gt;% \n  filter(is.na(season_type))\n\n\n# A tibble: 0 × 9\n# ℹ 9 variables: game_id &lt;chr&gt;, week &lt;int&gt;, home_team &lt;chr&gt;, away_team &lt;chr&gt;,\n#   season_type &lt;chr&gt;, game_date &lt;chr&gt;, result &lt;int&gt;, home_score &lt;int&gt;,\n#   away_score &lt;int&gt;\n\n\nCode\npbp_selected %&gt;% \n  filter(is.na(game_date))\n\n\n# A tibble: 0 × 9\n# ℹ 9 variables: game_id &lt;chr&gt;, week &lt;int&gt;, home_team &lt;chr&gt;, away_team &lt;chr&gt;,\n#   season_type &lt;chr&gt;, game_date &lt;chr&gt;, result &lt;int&gt;, home_score &lt;int&gt;,\n#   away_score &lt;int&gt;\n\n\nCode\npbp_selected %&gt;% \n  filter(is.na(result))\n\n\n# A tibble: 0 × 9\n# ℹ 9 variables: game_id &lt;chr&gt;, week &lt;int&gt;, home_team &lt;chr&gt;, away_team &lt;chr&gt;,\n#   season_type &lt;chr&gt;, game_date &lt;chr&gt;, result &lt;int&gt;, home_score &lt;int&gt;,\n#   away_score &lt;int&gt;\n\n\nCode\npbp_selected %&gt;% \n  filter(is.na(home_score))\n\n\n# A tibble: 0 × 9\n# ℹ 9 variables: game_id &lt;chr&gt;, week &lt;int&gt;, home_team &lt;chr&gt;, away_team &lt;chr&gt;,\n#   season_type &lt;chr&gt;, game_date &lt;chr&gt;, result &lt;int&gt;, home_score &lt;int&gt;,\n#   away_score &lt;int&gt;\n\n\nCode\npbp_selected %&gt;% \n  filter(is.na(away_score))\n\n\n# A tibble: 0 × 9\n# ℹ 9 variables: game_id &lt;chr&gt;, week &lt;int&gt;, home_team &lt;chr&gt;, away_team &lt;chr&gt;,\n#   season_type &lt;chr&gt;, game_date &lt;chr&gt;, result &lt;int&gt;, home_score &lt;int&gt;,\n#   away_score &lt;int&gt;\n\n\nCode\n# Inspecting the categorical variables from pbp_selected for inconsistency\n\npbp_selected %&gt;% \n  select(home_team) %&gt;% \n  unique()\n\n\n# A tibble: 32 × 1\n   home_team\n   &lt;chr&gt;    \n 1 WAS      \n 2 NYJ      \n 3 ATL      \n 4 CLE      \n 5 NYG      \n 6 KC       \n 7 CHI      \n 8 BAL      \n 9 IND      \n10 SEA      \n# ℹ 22 more rows\n\n\nCode\npbp_selected %&gt;% \n  select(away_team) %&gt;% \n  unique()\n\n\n# A tibble: 32 × 1\n   away_team\n   &lt;chr&gt;    \n 1 ARI      \n 2 BUF      \n 3 CAR      \n 4 CIN      \n 5 DAL      \n 6 DET      \n 7 GB       \n 8 HOU      \n 9 JAX      \n10 LA       \n# ℹ 22 more rows\n\n\nCode\npbp_selected %&gt;% \n  select(season_type) %&gt;% \n  unique()\n\n\n# A tibble: 2 × 1\n  season_type\n  &lt;chr&gt;      \n1 REG        \n2 POST       \n\n\nCode\n# Dropping duplicate entries\npbp_selected &lt;- pbp_selected %&gt;% \n  unique()\n\n\n\n\nAnalyzing the dataset to identify the team who won the SUPER BOWL\n\n\nCode\npbp_selected_post &lt;- pbp_selected %&gt;% # Filtering the dataset to include only SUPER BOWL matches\n  filter(season_type == \"POST\")\n\n\npbp_post_winners &lt;- pbp_selected_post %&gt;% # Creating a new column for the winning teams across the matches played\n  mutate(home_winner = result &gt;0, \n         winning_team = case_when(home_winner == T ~ home_team,\n                                  home_winner == F ~ away_team))\n\npbp_post_winners %&gt;%  # filtering by week and selecting the winning team column to identify 2023/24 season Super Bowl winner\n  filter(week == 22) %&gt;% \n  select(winning_team)\n\n\n# A tibble: 1 × 1\n  winning_team\n  &lt;chr&gt;       \n1 KC          \n\n\n\n\nCalculating the point differential for the 2023/24 season\n\n\nCode\npbp_selected_diff &lt;- pbp_selected %&gt;% \n  filter(season_type == \"REG\") %&gt;% \n  group_by(home_team) %&gt;% \n  mutate(home_pf = sum(home_score),\n         home_pa = sum(away_score)) %&gt;% \n  ungroup() %&gt;% \n  group_by(away_team) %&gt;% \n  mutate(away_pf = sum(away_score),\n         away_pa = sum(home_score)) %&gt;% \n  ungroup()\n\npbp_selected_diff1 &lt;- pbp_selected_diff %&gt;% \n  reframe(team = home_team,\n          pf = home_pf,\n          pa =home_pa) %&gt;% \n  unique()\n\npbp_selected_diff2 &lt;- pbp_selected_diff %&gt;% \n  reframe(team = away_team,\n          pf = away_pf,\n          pa = away_pa) %&gt;% \n  unique()\n\npbp_diff_comb &lt;- rbind(pbp_selected_diff1,pbp_selected_diff2) %&gt;% \n  group_by(team) %&gt;% \n  mutate(pf = sum(pf), pa = sum(pa), pt_diff = pf - pa) %&gt;% \n  unique()\n\npbp_diff_comb\n\n\n# A tibble: 32 × 4\n# Groups:   team [32]\n   team     pf    pa pt_diff\n   &lt;chr&gt; &lt;int&gt; &lt;int&gt;   &lt;int&gt;\n 1 WAS     329   518    -189\n 2 NYJ     268   355     -87\n 3 ATL     321   373     -52\n 4 CLE     396   362      34\n 5 NYG     266   407    -141\n 6 KC      371   294      77\n 7 CHI     360   379     -19\n 8 BAL     483   280     203\n 9 IND     396   415     -19\n10 SEA     364   402     -38\n# ℹ 22 more rows\n\n\nCode\n# Creating a csv file of point differential\nwrite_csv(pbp_diff_comb, \"poinit_diffential.csv\")\n\n\n\n\nVisualizing the dataset\n\n\nCode\npbp_ptdiff_comb &lt;- read_csv(\"poinit_diffential.csv\")\n\nteams_colors_logos &lt;- load_teams()\nteams_colors_logos_logo &lt;- teams_colors_logos %&gt;% \n  select(team_abbr,team_name,team_logo_espn,team_wordmark,team_color,team_color2)\n\npbp_ptdiff_comb_modified &lt;- pbp_ptdiff_comb %&gt;% \n  left_join(teams_colors_logos_logo, by = c(\"team\"=\"team_abbr\"))\n\noptions(timeout = 300)\npbp_ptdiff_comb_modified %&gt;% \n  ggplot(mapping = aes(x = reorder(team_name, pf),y = pf)) +\n  geom_bar(aes(fill = team_color, colour = team_color2), stat = \"identity\") +\n  scale_color_identity(aesthetics = c(\"fill\",\"color\")) +\n  geom_image(aes(y = pf + 11, image = team_logo_espn), \n             asp = 16/9, size = 0.025) +\n  labs(x = \"Team\",\n       y = \"PF\",\n       title = \"Bar chart of Total Points Scored by Each Team\") +\n  theme(plot.title = element_text(hjust = 0.5,\n                                  face = \"bold\",\n                                  size = 20),\n        plot.subtitle = element_text(hjust = 0.5),\n        axis.text.x = element_text(angle = 45, hjust = 1))\n\n\n\n\n\n\n\n\n\nCode\npbp_ptdiff_comb_modified %&gt;% \n  ggplot(mapping = aes(x = pf,\n                       y = pa)) +\n  geom_abline(slope = -1, intercept = 0, color = \"grey\", alpha = 0.5)+\n  geom_abline(slope = -1, intercept = 50, color = \"grey\", alpha = 0.5)+\n  geom_abline(slope = -1, intercept = -50, color = \"grey\", alpha = 0.5)+\n  geom_abline(slope = -1, intercept = 100, color = \"grey\", alpha = 0.5)+\n  geom_abline(slope = -1, intercept = -100, color = \"grey\", alpha = 0.5)+\n  geom_abline(slope = -1, intercept = 150, color = \"grey\", alpha = 0.5)+\n  geom_abline(slope = -1, intercept = -150, color = \"grey\", alpha = 0.5)+\n  geom_abline(slope = -1, intercept = 200, color = \"grey\", alpha = 0.5)+\n  geom_abline(slope = -1, intercept = -200, color = \"grey\", alpha = 0.5)+\n  scale_y_reverse() +\n  geom_image(aes(image = team_logo_espn),\n             asp = 16/19,\n             size = 0.04) +\n  labs(x = \"Point For\",\n       y = \"Point Against\",\n       title = \"NFL Points For and Against\",\n       subtitle = \"2023 Season W1-W18 | Data via NFLReadr\",\n       caption= \"Ayorinde Ayomide David\") +\n  theme(plot.title = element_text(hjust = 0.5, \n                                  face = \"bold\",\n                                  size = 20),\n        plot.subtitle = element_text(hjust = 0.5)\n  )\n\n\n\n\n\n\n\n\n\nCode\npbp_ptdiff_comb_modified %&gt;% \n  reframe(team_wordmark,pf,pa,pt_diff) %&gt;% \n  arrange(-pt_diff) %&gt;% \n  gt() %&gt;% \n  gt_img_rows(team_wordmark) %&gt;% \n  cols_label(team_wordmark = \"Team\",\n             pf = \"PF\",\n             pa = \"PA\",\n             pt_diff = \"PD\") %&gt;% \n  cols_align(align = \"center\") %&gt;% \n  gt_theme_espn() %&gt;% \n  tab_header(title = \"Team Point Differentials 2023/24 Season\") %&gt;% \n  data_color(columns = c(pt_diff),\n             target_columns = c(pt_diff),\n             colors = scales::col_numeric(\n               palette = c(\"tomato3\", \"green4\"),\n               domain = NULL\n             ))\n\n\n\n\n\n\n\n\nTeam Point Differentials 2023/24 Season\n\n\nTeam\nPF\nPA\nPD\n\n\n\n\n\n483\n280\n203\n\n\n\n509\n315\n194\n\n\n\n491\n298\n193\n\n\n\n451\n311\n140\n\n\n\n496\n391\n105\n\n\n\n371\n294\n77\n\n\n\n402\n327\n75\n\n\n\n461\n395\n66\n\n\n\n396\n362\n34\n\n\n\n383\n350\n33\n\n\n\n404\n377\n27\n\n\n\n377\n353\n24\n\n\n\n348\n325\n23\n\n\n\n377\n371\n6\n\n\n\n433\n428\n5\n\n\n\n332\n331\n1\n\n\n\n344\n362\n-18\n\n\n\n366\n384\n-18\n\n\n\n360\n379\n-19\n\n\n\n396\n415\n-19\n\n\n\n304\n324\n-20\n\n\n\n364\n402\n-38\n\n\n\n321\n373\n-52\n\n\n\n346\n398\n-52\n\n\n\n357\n413\n-56\n\n\n\n305\n367\n-62\n\n\n\n268\n355\n-87\n\n\n\n330\n455\n-125\n\n\n\n236\n366\n-130\n\n\n\n266\n407\n-141\n\n\n\n236\n416\n-180\n\n\n\n329\n518\n-189"
  }
]